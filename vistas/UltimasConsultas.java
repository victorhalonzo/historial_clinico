/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import dao.ConsultaDAO;
import dao.HCDAO;
import entidades.Consulta;
import entidades.Imagen;
import entidades.Receta;
import java.awt.Frame;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class UltimasConsultas extends javax.swing.JDialog {

    /**
     * Creates new form UltimasConsultas
     */
    public UltimasConsultas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        listar();
    }

    private void listar() {

        ConsultaDAO cDAO = new ConsultaDAO();

        try {
            ArrayList<Consulta> consultas = cDAO.ultimasConsultas();

            DefaultTableModel modelo = new DefaultTableModel() {

                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            };
            modelo.addColumn("ID");
            modelo.addColumn("ID PACIENTE");
            modelo.addColumn("FECHA");
            modelo.addColumn("PACIENTE");
            modelo.addColumn("TALLA");
            modelo.addColumn("PESO");
            modelo.addColumn("IMC");
            modelo.addColumn("TEMPERATURA");
            modelo.addColumn("PULSO");
            modelo.addColumn("PRESIÓN ARTERIAL");
            modelo.addColumn("MOTIVO");
            modelo.addColumn("CUADRO CLÍNICO");
            modelo.addColumn("EXÁMENES COMPLEMENTARIOS");
            modelo.addColumn("DIAGNÓSTICO");
            modelo.addColumn("TRATAMIENTO");

            for (Consulta consulta : consultas) {
                String[] fila = new String[15];
                fila[0] = String.valueOf(consulta.getId());
                fila[1] = String.valueOf(consulta.getIdPaciente());
                fila[2] = String.valueOf(consulta.getFecha());
                fila[3] = consulta.getNombresPaciente();
                fila[4] = String.valueOf(consulta.getTalla());
                fila[5] = String.valueOf(consulta.getPeso());
                fila[6] = String.valueOf(consulta.getImc());
                fila[7] = String.valueOf(consulta.getTemperatura());
                fila[8] = String.valueOf(consulta.getPulso());
                fila[9] = consulta.getPresionArterial();
                fila[10] = consulta.getDescripcion();
                fila[11] = consulta.getCuadroClinico();
                fila[12] = consulta.getExamenesComplementarios();
                fila[13] = consulta.getDiagnostico();
                fila[14] = consulta.getTratamiento();

                modelo.addRow(fila);
            }

            tblUltimasConsultas.setModel(modelo);

            ocultarColumnas(0);
            ocultarColumnas(1);
            ocultarColumnas(4);
            ocultarColumnas(5);
            ocultarColumnas(6);
            ocultarColumnas(7);
            ocultarColumnas(8);
            ocultarColumnas(9);
            ocultarColumnas(10);
            ocultarColumnas(11);
            ocultarColumnas(12);
            ocultarColumnas(13);
            ocultarColumnas(14);

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void ocultarColumnas(int col) {
        tblUltimasConsultas.getColumnModel().getColumn(col).setMaxWidth(0);
        tblUltimasConsultas.getColumnModel().getColumn(col).setMinWidth(0);
        tblUltimasConsultas.getTableHeader().getColumnModel().getColumn(col).setMaxWidth(0);
        tblUltimasConsultas.getTableHeader().getColumnModel().getColumn(col).setMinWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUltimasConsultas = new javax.swing.JTable();
        btEditar = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Últimas Consultas");

        tblUltimasConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblUltimasConsultas);

        btEditar.setText("Editar");
        btEditar.setFocusable(false);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btEliminar.setText("Eliminar");
        btEliminar.setFocusable(false);
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btEliminar)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btEditar)
                    .addComponent(btEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // TODO add your handling code here:

        if (tblUltimasConsultas.getSelectedRow() >= 0) {
            this.dispose();
            NuevaConsulta2 nc = new NuevaConsulta2((JFrame) (Frame) this.getParent(), true);
            nc.lblNCTitle.setText("Editar Consulta");
            int idConsulta = Integer.parseInt(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 0)));
            nc.txtIdConsulta.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 0)));
            nc.txtIdPaciente.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 1)));

            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            Date fecha = null;
            try {
                fecha = formato.parse(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 2)));

            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Ha ocurrido un evento " + ex.getMessage());

            }
            nc.jdFecha.setDate(fecha);
            nc.txtPaciente.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 3)));
            nc.p1.txtTalla.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 4)));
            nc.p1.txtPeso.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 5)));
            nc.p1.txtImc.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 6)));
            nc.p1.txtTemperatura.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 7)));
            nc.p1.txtPulso.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 8)));
            nc.p1.txtPresionA.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 9)));
            nc.p1.txtMotivo.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 10)));
            nc.p1.txtCuadroClinico.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 11)));
            nc.p1.txtExamenesComplementarios.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 12)));
            nc.p2.txtDiagnostico.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 13)));
            nc.p2.txtTratamiento.setText(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 14)));

            datosReceta(idConsulta, nc);
            listarImagenes(idConsulta, nc);

            nc.setLocationRelativeTo(this);
            nc.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una consulta para editar.");
        }

    }//GEN-LAST:event_btEditarActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        // TODO add your handling code here:
        if (tblUltimasConsultas.getSelectedRow() >= 0) {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar esta consulta?");
            if (opcion == 0) {
                int idConsulta = Integer.parseInt(String.valueOf(tblUltimasConsultas.getValueAt(tblUltimasConsultas.getSelectedRow(), 0)));
                ConsultaDAO cDAO = new ConsultaDAO();
                try {
                    if (cDAO.eliminarConsulta(idConsulta)) {
                        JOptionPane.showMessageDialog(this, "Consulta eliminada");
                        listar();
                    } else {
                        JOptionPane.showMessageDialog(this, "Ha ocurrido un evento");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un evento " + ex.getMessage());
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una consulta para eliminar.");
        }
    }//GEN-LAST:event_btEliminarActionPerformed

    public void datosReceta(int idConsulta, NuevaConsulta2 nc) {
        HCDAO hc = new HCDAO();

        try {
            ArrayList<Receta> receta = hc.datosReceta(idConsulta);

            DefaultTableModel modelo = new DefaultTableModel() {
                @Override
                public Class<?> getColumnClass(int column) {
                    switch (column) {
                        case 1:
                            return Integer.class;
                        default:
                            return String.class;
                    }
                }
            };

            modelo.addColumn("Medicamento");
            modelo.addColumn("Cantidad");

            for (Receta r : receta) {
                String[] fila = new String[2];
                fila[0] = r.getNombreMedicamento();
                fila[1] = String.valueOf(r.getCantidad());

                modelo.addRow(fila);
            }

            nc.p2.tblReceta.setModel(modelo);

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

    }

    public void listarImagenes(int idConsulta, NuevaConsulta2 nc) {
        HCDAO hc = new HCDAO();

        try {
            ArrayList<Imagen> imagenes = hc.imagenesConsulta(idConsulta);

            //nc.p2.tblImagenes.setDefaultRenderer(Object.class, new btTablaImagenes());
            DefaultTableModel modelo = new DefaultTableModel() {

                @Override
                public boolean isCellEditable(int row, int col) {
                    return false;
                }
            };

            modelo.addColumn("Nombre");
            modelo.addColumn("Ruta");

            for (Imagen img : imagenes) {
                String[] fila = new String[2];

                fila[0] = img.getNombre();
                fila[1] = img.getRuta();

                modelo.addRow(fila);
            }

            nc.p2.tblImagenes.setModel(modelo);

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UltimasConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UltimasConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UltimasConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UltimasConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UltimasConsultas dialog = new UltimasConsultas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUltimasConsultas;
    // End of variables declaration//GEN-END:variables
}
