/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import com.toedter.calendar.IDateEditor;
import dao.PacienteDAO;
import entidades.Paciente;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import static vistas.NPDatosPersonales.jdFechaNac;

/**
 *
 * @author Usuario
 */
public class NuevoPaciente2 extends javax.swing.JDialog implements ActionListener {

    NPDatosPersonales p1 = new NPDatosPersonales();
    NPAntecedentes p2 = new NPAntecedentes();
    NPAntecedentes2 p3 = new NPAntecedentes2();
    NPDatosGinecologicos p4 = new NPDatosGinecologicos();
    NPInspeccion p5 = new NPInspeccion();

    /**
     * Creates new form NuevoPaciente2
     */
    public NuevoPaciente2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        p1.setSize(700, 500);
        p1.setLocation(0, 0);
        p2.setSize(700, 500);
        p2.setLocation(0, 0);
        p3.setSize(700, 500);
        p3.setLocation(0, 0);
        p4.setSize(700, 500);
        p4.setLocation(0, 0);
        p5.setSize(700, 500);
        p5.setLocation(0, 0);

        content.add(p1, BorderLayout.CENTER);
        p1.setVisible(true);
        p2.setVisible(false);
        p3.setVisible(false);
        p4.setVisible(false);
        p5.setVisible(false);

        content.revalidate();
        content.repaint();

        btAtras.setVisible(false);
        btSiguiente.addActionListener(this);
        btAtras.addActionListener(this);
        btGuardar.addActionListener(this);

        txtIdPaciente.setVisible(false);
        lblLoading.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new javax.swing.JPanel();
        lblNPTitle = new javax.swing.JLabel();
        btAtras = new javax.swing.JButton();
        btSiguiente = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        btLimpiar = new javax.swing.JButton();
        txtIdPaciente = new javax.swing.JTextField();
        lblLoading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        content.setPreferredSize(new java.awt.Dimension(700, 500));

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
        );

        lblNPTitle.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblNPTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNPTitle.setText("Nuevo Paciente");

        btAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/anterior.png"))); // NOI18N
        btAtras.setText("Atr√°s");
        btAtras.setFocusable(false);

        btSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/siguiente-boton.png"))); // NOI18N
        btSiguiente.setText("Siguiente");
        btSiguiente.setFocusable(false);

        btGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/disco-flexible.png"))); // NOI18N
        btGuardar.setText("Guardar");
        btGuardar.setFocusable(false);
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btLimpiar.setText("Limpiar");
        btLimpiar.setFocusable(false);
        btLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiarActionPerformed(evt);
            }
        });

        txtIdPaciente.setEditable(false);

        lblLoading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Spinner-1s-64px.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(lblNPTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(btAtras)
                                .addGap(18, 18, 18)
                                .addComponent(btSiguiente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btLimpiar)
                                .addGap(43, 43, 43)
                                .addComponent(btGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNPTitle)
                    .addComponent(txtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btLimpiar)
                        .addComponent(btGuardar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btSiguiente)
                        .addComponent(btAtras)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btGuardarActionPerformed

    private void btLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btLimpiarActionPerformed

    private void limpiar() {

        p1.txtNombres.setText("");
        p1.txtApellidos.setText("");
        p1.rbMasculino.setSelected(false);
        p1.rbFemenino.setSelected(false);
        p1.jdFechaNac.setCalendar(null);
        p1.txtDomicilio.setText("");
        p1.txtLugarNac.setText("");
        p1.cbEstadoCivil.setSelectedIndex(0);
        p2.txtAntecedentesPP.setText("");
        p5.txtInspeccionGeneral.setText("");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoPaciente2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoPaciente2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoPaciente2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoPaciente2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NuevoPaciente2 dialog = new NuevoPaciente2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtras;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btLimpiar;
    private javax.swing.JButton btSiguiente;
    private javax.swing.JPanel content;
    private javax.swing.JLabel lblLoading;
    public javax.swing.JLabel lblNPTitle;
    public static javax.swing.JTextField txtIdPaciente;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        Object evt = e.getSource();

        if (evt.equals(btSiguiente)) {
            if (p1.isVisible() == true) {
                p1.setVisible(false);
                p2.setVisible(true);
                content.add(p2);
                content.validate();
                btAtras.setVisible(true);
            } else if (p2.isVisible() == true) {
                p2.setVisible(false);
                p3.setVisible(true);
                content.add(p3);
                content.validate();

            } else if (p3.isVisible() == true) {
                p3.setVisible(false);
                if (p1.rbFemenino.isSelected() == true) {
                    p4.setVisible(true);
                    content.add(p4);
                } else {
                    p5.setVisible(true);
                    content.add(p5);
                    btSiguiente.setVisible(false);
                }
                content.validate();

            } else if (p4.isVisible() == true) {
                p4.setVisible(false);
                p5.setVisible(true);
                content.add(p5);
                content.validate();
                btSiguiente.setVisible(false);
            }
        }

        if (evt.equals(btAtras)) {
            if (p5.isVisible() == true) {

                p5.setVisible(false);
                if (p1.rbFemenino.isSelected() == true) {
                    p4.setVisible(true);
                    content.add(p4);
                } else {
                    p3.setVisible(true);
                    content.add(p3);
                }
                content.validate();
                btSiguiente.setVisible(true);
            } else if (p4.isVisible() == true) {
                p3.setVisible(true);
                p4.setVisible(false);
                content.add(p3);
                content.validate();

            } else if (p3.isVisible() == true) {
                p2.setVisible(true);
                p3.setVisible(false);
                content.add(p3);
                content.validate();

            } else if (p2.isVisible() == true) {
                p1.setVisible(true);
                p2.setVisible(false);
                content.add(p1);
                content.validate();
                btAtras.setVisible(false);
            }
        }

        if (evt.equals(btGuardar)) {

            new _LoadGuardarPaciente().show();
        }

    }

    private void guardarPaciente() {
        if (!p1.txtNombres.getText().equals("") && !p1.txtApellidos.getText().equals("")
                && (p1.rbMasculino.isSelected() == true || p1.rbFemenino.isSelected() == true)
                && p1.jdFechaNac.getDate() != null) {
            SimpleDateFormat format = new SimpleDateFormat("dd/MMMM/yyyy");

            try {
                char txtSexo;
                if (p1.rbMasculino.isSelected() == true) {
                    txtSexo = 'M';
                } else {
                    txtSexo = 'F';
                }
                String txtFuma = "";
                if (p5.rbFumaSi.isSelected() == true) {
                    txtFuma = "SI";
                } else if (p5.rbFumaNo.isSelected() == true) {
                    txtFuma = "NO";
                }
                String txtAlcohol = "";
                if (p5.rbAlcoholSi.isSelected() == true) {
                    txtAlcohol = "SI";
                } else if (p5.rbAlcoholNo.isSelected() == true) {
                    txtAlcohol = "NO";
                }

                Paciente p = new Paciente();
                p.setNombres(p1.txtNombres.getText());
                p.setApellidos(p1.txtApellidos.getText());
                p.setSexo(txtSexo);
                p.setDomicilio(p1.txtDomicilio.getText());
                p.setTelefono(p1.txtTelefono.getText());
                p.setFechaNacimiento(p1.jdFechaNac.getDate());
                p.setLugarNacimiento(p1.txtLugarNac.getText());
                p.setEstadoCivil(p1.cbEstadoCivil.getSelectedItem().toString());
                p.setAntecedentes_pp(p2.txtAntecedentesPP.getText());
                p.setAntecedentes_pf(p2.txtAntecedentesPF.getText());
                p.setAlergias(p3.txtAlergias.getText());
                p.setCirugias(p3.txtCirugias.getText());
                p.setAntecedentes_prenatales(p3.txtAntecedentesPN.getText());
                p.setAntecedentes_obs(p4.txtAntecedentesObs.getText());
                p.setMenarquia(p4.jdMenarquia.getDate());
                p.setFecha_ultima_menstruacion(p4.jdFechaUM.getDate());
                p.setTabaco(txtFuma);
                p.setTabaco_observacion(p5.txtTabacoObservacion.getText());
                p.setAlcohol(txtAlcohol);
                p.setAlcohol_observacion(p5.txtAlcoholObservacion.getText());
                if (!p5.txtHijos.getText().equals("")) {
                    p.setCantidad_hijos(Integer.parseInt(p5.txtHijos.getText()));
                }
                p.setInspeccionGeneral(p5.txtInspeccionGeneral.getText());

                PacienteDAO pDAO = new PacienteDAO();

                if (txtIdPaciente.getText().equals("")) {
                    int idPaciente = pDAO.agregarPaciente(p);
                    if (idPaciente != 0) {
                        txtIdPaciente.setText(String.valueOf(idPaciente));
                        JOptionPane.showMessageDialog(this, "Guardado correctamente");
                        //this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Ha ocurrido un evento");
                    }
                } else {
                    p.setId(Integer.parseInt(txtIdPaciente.getText()));
                    if (pDAO.actualizarPaciente(p)) {
                        JOptionPane.showMessageDialog(this, "Datos actualizados correctamente");
                        //this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Ha ocurrido un evento");
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Complete los campos obligatorios (*)");
        }
    }
    
    public class _LoadGuardarPaciente implements Runnable {

        public void show() {
            new Thread(this).start();
        }

        public void run() {
            lblLoading.setVisible(true);
            
            guardarPaciente();
            
            lblLoading.setVisible(false);
            
            
            
        }
    }
}
